version: '3.8'

services:
  eureka-server:
    image: eureka-server:latest
    networks:
      - posted-network
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-server:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    container_name: posted-db
    image: mysql:8.0
    restart: always
    networks:
      - posted-network
    environment:
      MYSQL_DATABASE: 'postedDB'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.4.0
    container_name: kafka
    networks:
      - posted-network
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_KRAFT_CLUSTER_ID=LeluwlLWQ7qHBXcgRH5dsA
      - BITNAMI_DEBUG=true
      - KAFKA_OPTS=-Djava.security.auth.login.config=/opt/bitnami/kafka/config/kafka_jaas.con
    volumes:
      - kafka-data:/bitnami/kafka
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - app-network

  user-service:
    container_name: user-service
    build: ./user-service/user
    networks:
      - posted-network
    ports:
      - '8081:8081'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://posted-db:3306/postedDB?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy

  post-service:
    container_name: post-service
    build: ./post-service/post
    networks:
      - posted-network
    ports:
      - '8082:8082'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://posted-db:3306/postedDB?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy

  gateway-service:
    build:
      context: ./gateway-service/gateway
      #dockerfile: Dockerfile
    networks:
      - posted-network
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_REDIS_HOST=redis
    depends_on:
      eureka-server:
        condition: service_healthy
      - redis

volumes:
  mysql-data:
  kafka-data:

networks:
  posted-network:
    driver: bridge