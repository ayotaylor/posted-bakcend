spring:
  application:
    name: gateway-service
  # main:
  #   web-application-type: reactive
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**
            - Path=/api/user/**
          filters:
            - RewritePath=/api/users/(?<segment>.*), /$\{segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
            - name: JwtAuthentication
              args:
                tokenHeader: Authorization
                tokenPrefix: "Bearer "
                allowPublicEndpoints: true
                publicEndpoints: "/api/auth/login,/api/auth/register"
        - id: post-service
          uri: lb://post-service
          predicates:
            - Path=/api/post/**
          filters:
            - RewritePath=/api/posts/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY
            - name: JwtAuthentication
              args:
                tokenHeader: Authorization
                tokenPrefix: "Bearer "
                allowPublicEndpoints: true
                publicEndpoints: "/api/auth/login,/api/auth/register"
  data:
    redis:
      host: redis
      port: 6379

eureka:
  client:
    initial-instance-info-replication-interval-seconds: 5
    registry-fetch-interval-seconds: 5
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://admin:password@eureka-server:8761/eureka #rep;ace with eureka-server in docker version of this file
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
    preferIpAddress: true

server:
  port: 8080

logging:
  level:
    # com.netflix.eureka: DEBUG
    # com.netflix.discovery: DEBUG
    org:
      springframework:
        security: DEBUG
        netflix: DEBUG



jwt: # change secret
  secret: RqqTGTbrokhLH59FhcdeQfQIloa7zR/ZIhaBzGPRZzAGVJgWx9faoewBE0JQcGguuC4B1PIzXPxPufaBMdBV0Q==
  expiration: 3600000  # 1 hour in milliseconds